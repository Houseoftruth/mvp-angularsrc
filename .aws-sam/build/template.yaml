AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'mvp-sam

  SAM Template for mvp-sam

  '
Globals:
  Function:
    Timeout: 3
Parameters:
  ParameterGroups:
  - Label:
      default: Domain Configuration
    Parameters:
    - DomainName
    - HostedZoneId
    - CreateRedirect
  - Label:
      default: API Origin Configuration
    Parameters:
    - ApiPath
    - ApiOriginDomainName
    - ApiOriginPath
    - ApiOriginKey
  ParameterLabels:
    CreateRedirect:
      default: Redirect http(s)://www.<domain> to https://domain?
  ComputeType:
    AllowedValues:
    - BUILD_GENERAL1_SMALL
    - BUILD_GENERAL1_MEDIUM
    - BUILD_GENERAL1_LARGE
    Default: BUILD_GENERAL1_SMALL
    Description: AWS CodeBuild project compute type.
    Type: String
  EnvironmentType:
    AllowedValues:
    - LINUX_CONTAINER
    - WINDOWS_CONTAINER
    Default: LINUX_CONTAINER
    Description: Environment type used by AWS CodeBuild. See the documentation for
      details (https://docs.aws.amazon.com/codebuild/latest/userguide/create-project.html#create-project-cli).
    Type: String
  SourceCodeProvider:
    Type: String
    Description: Location of your source code repository
    Default: GitHub
    AllowedValues:
    - GitHub
    - CodeCommit
  GitHubOAuthToken:
    Description: OAuth token used by AWS CodePipeline to connect to GitHub
    NoEcho: true
    Type: String
    Default: ''
  GitHubOwner:
    Description: GitHub username owning the repo
    Type: String
    Default: ''
  GitHubRepo:
    Description: GitHub repo name
    Type: String
    Default: ''
  GitHubBranch:
    Description: GitHub repo branch name. It defaults to master if not specified.
    Type: String
    Default: master
  CodeCommitRepo:
    Type: String
    Description: CodeCommit repository name, only specify if you chose CodeCommit
      in SourceCodeProvider
    Default: ''
  CodeCommitBranch:
    Type: String
    Description: CodeCommit repository branch name, only specify if you chose CodeCommit
      in SourceCodeProvider.
    Default: master
  DeployParameterOverrides:
    Description: Parameter overrides for the deploy stage
    Type: String
    Default: '{}'
  DeployStackName:
    Description: The stack name for the deploy stage
    Type: String
    Default: ''
  DeployRoleName:
    Description: The IAM role name to deploy the CloudFormation stack. This role needs
      to be configured to allow cloudformation.amazonaws.com to assume it. Deploy
      stage will not be added if not specified.
    Type: String
    Default: ''
  IntegTestRoleName:
    Description: The IAM role name to deploy a test stack and run integration tests.
      This role needs to be configured to allow codebuild.amazonaws.com and cloudformation.amazonaws.com
      to assume it. Test stage will not be added if not specified.
    Type: String
    Default: ''
  BuildSpecFilePath:
    Description: Relative BuildSpec file path for build stage. For more information,
      see https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html
    Type: String
    Default: buildspec.yaml
  IntegTestBuildSpecFilePath:
    Description: Relative BuildSpec file path for test stage. For more information,
      see https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html
    Type: String
    Default: buildspec-integ-test.yaml
  PublishToSAR:
    Description: Whether to publish the application to AWS Serverless Application
      Repository
    Type: String
    AllowedValues:
    - true
    - false
    Default: false
  DomainName:
    Type: String
    Default: mvp.net
    Description: Domain name to use
  ApiPath:
    Type: String
    Default: /api
    Description: URI path to route to API
  ApiOriginDomainName:
    Type: String
    Default: api.mvp.net
    Description: API origin domain name
  ApiOriginPath:
    Type: String
    Default: /
    Description: API origin path
  ApiOriginKey:
    Type: String
    Default: ''
    Description: x-api-key HTTP request Bheader sent to API
  CreateRedirect:
    Type: String
    Default: 'true'
    Description: Set to 'false' to not create the redirect CloudFront distribution
    AllowedValues:
    - 'true'
    - 'false'
  TableName:
    Type: String
    Default: mvpchatlog
    Description: (Required) The name of the new DynamoDB to store connection identifiers
      for each connected clients. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: Required. Can be characters and underscore only. No numbers
      or special characters allowed.
  TableNamea:
    Type: String
    Default: mvpusers
    Description: (Required) The name of the new DynamoDB to store connection identifiers
      for each connected clients. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: Required. Can be characters and underscore only. No numbers
      or special characters allowed.
  TableNameb:
    Type: String
    Default: simplechatconnections
    Description: (Required) The name of the new DynamoDB to store connection identifiers
      for each connected clients. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: Required. Can be characters and underscore only. No numbers
      or special characters allowed.
  TableNamec:
    Type: String
    Default: simplechatconnectionssss
    Description: (Required) The name of the new DynamoDB to store connection identifiers
      for each connected clients. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: Required. Can be characters and underscore only. No numbers
      or special characters allowed.
Conditions:
  HasTestStage:
    Fn::Not:
    - Fn::Equals:
      - Ref: IntegTestRoleName
      - ''
  HasDeployStage:
    Fn::Not:
    - Fn::Equals:
      - Ref: DeployRoleName
      - ''
  HasPublishStage:
    Fn::Equals:
    - Ref: PublishToSAR
    - 'true'
  UseCodeCommit:
    Fn::Equals:
    - Ref: SourceCodeProvider
    - CodeCommit
  UseGitHub:
    Fn::Equals:
    - Ref: SourceCodeProvider
    - GitHub
Rules:
  ValidateGitHub:
    RuleCondition:
      Fn::Equals:
      - Ref: SourceCodeProvider
      - GitHub
    Assertions:
    - Assert:
        Fn::Not:
        - Fn::Equals:
          - Ref: GitHubOwner
          - ''
      AssertDescription: GitHubOwner must be specified when SourceCodeProvider is
        GitHub
    - Assert:
        Fn::Not:
        - Fn::Equals:
          - Ref: GitHubRepo
          - ''
      AssertDescription: GitHubRepo must be specified when SourceCodeProvider is GitHub
    - Assert:
        Fn::Not:
        - Fn::Equals:
          - Ref: GitHubOAuthToken
          - ''
      AssertDescription: GitHubOAuthToken must be specified when SourceCodeProvider
        is GitHub
    - Assert:
        Fn::Not:
        - Fn::Equals:
          - Ref: GitHubBranch
          - ''
      AssertDescription: GitHubBranch must be specified when SourceCodeProvider is
        GitHub
  ValidateCodeCommit:
    RuleCondition:
      Fn::Equals:
      - Ref: SourceCodeProvider
      - CodeCommit
    Assertions:
    - Assert:
        Fn::Not:
        - Fn::Equals:
          - Ref: CodeCommitRepo
          - ''
      AssertDescription: CodeCommitRepo must be specified when SourceCodeProvider
        is CodeCommit
    - Assert:
        Fn::Not:
        - Fn::Equals:
          - Ref: CodeCommitBranch
          - ''
      AssertDescription: CodeCommitBranch must be specified when SourceCodeProvider
        is CodeCommit
Resources:
  Artifacts:
    Properties:
      LifecycleConfiguration:
        Rules:
        - ExpirationInDays: 30
          Status: Enabled
    Type: AWS::S3::Bucket
  ArtifactsPolicy:
    Condition: HasPublishStage
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: Artifacts
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - s3:GetObject
          Effect: Allow
          Principal:
            Service:
            - serverlessrepo.amazonaws.com
          Resource:
            Fn::Sub: ${Artifacts.Arn}/*
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location:
          Ref: Artifacts
        Type: S3
      RoleArn:
        Fn::GetAtt:
        - PipelineRole
        - Arn
      Stages:
      - Name: Source
        Actions:
        - Fn::If:
          - UseCodeCommit
          - Name: CodeCommitSource
            ActionTypeId:
              Category: Source
              Owner: AWS
              Provider: CodeCommit
              Version: '1'
            Configuration:
              RepositoryName:
                Ref: CodeCommitRepo
              BranchName:
                Ref: CodeCommitBranch
            OutputArtifacts:
            - Name: SourceArtifact
          - Name: GitHubSource
            ActionTypeId:
              Category: Source
              Owner: ThirdParty
              Provider: GitHub
              Version: '1'
            Configuration:
              Owner:
                Ref: GitHubOwner
              OAuthToken:
                Ref: GitHubOAuthToken
              Repo:
                Ref: GitHubRepo
              Branch:
                Ref: GitHubBranch
              PollForSourceChanges: false
            OutputArtifacts:
            - Name: SourceArtifact
      - Name: Build
        Actions:
        - Name: Build
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: '1'
          Configuration:
            ProjectName:
              Ref: BuildProject
          InputArtifacts:
          - Name: SourceArtifact
          OutputArtifacts:
          - Name: BuildArtifact
      - Fn::If:
        - HasTestStage
        - Name: Test
          Actions:
          - Name: IntegrationTests
            ActionTypeId:
              Category: Test
              Owner: AWS
              Provider: CodeBuild
              Version: '1'
            Configuration:
              ProjectName:
                Ref: IntegrationTestsProject
              PrimarySource: SourceArtifact
            InputArtifacts:
            - Name: SourceArtifact
            - Name: BuildArtifact
        - Ref: AWS::NoValue
      - Fn::If:
        - HasDeployStage
        - Name: Deploy
          Actions:
          - Name: CreateChangeSet
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation
              Version: '1'
            InputArtifacts:
            - Name: BuildArtifact
            Configuration:
              ActionMode: CHANGE_SET_REPLACE
              Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
              ParameterOverrides:
                Ref: DeployParameterOverrides
              RoleArn:
                Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${DeployRoleName}
              StackName:
                Ref: DeployStackName
              TemplatePath: BuildArtifact::packaged-template.yaml
              ChangeSetName:
                Fn::Sub: a-${DeployStackName}-Deploy
            RunOrder: 1
          - Name: ExecuteChangeSet
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation
              Version: '1'
            Configuration:
              ActionMode: CHANGE_SET_EXECUTE
              StackName:
                Ref: DeployStackName
              ChangeSetName:
                Fn::Sub: a-${DeployStackName}-Deploy
            RunOrder: 2
        - Ref: AWS::NoValue
      - Fn::If:
        - HasPublishStage
        - Name: Publish
          Actions:
          - Name: Publish
            ActionTypeId:
              Category: Invoke
              Owner: AWS
              Provider: Lambda
              Version: '1'
            Configuration:
              FunctionName:
                Fn::GetAtt:
                - SARPublishApp
                - Outputs.ServerlessRepoPublishFunctionName
            InputArtifacts:
            - Name: BuildArtifact
            RunOrder: 1
        - Ref: AWS::NoValue
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Description:
        Fn::Sub: Used by CodePipeline. Created by CloudFormation ${AWS::StackId}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: s3-access
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:DeleteObject
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:PutObject
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:s3:::${Artifacts}/*
          - Effect: Allow
            Action:
            - s3:ListBucket
            - s3:GetBucketPolicy
            Resource:
            - Fn::Sub: arn:${AWS::Partition}:s3:::${Artifacts}
      - PolicyName: codebuild-access
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - codebuild:StartBuild
            - codebuild:BatchGetBuilds
            Resource:
            - Fn::GetAtt:
              - BuildProject
              - Arn
            - Fn::If:
              - HasTestStage
              - Fn::GetAtt:
                - IntegrationTestsProject
                - Arn
              - Ref: AWS::NoValue
      - Fn::If:
        - HasDeployStage
        - PolicyName: deploy-cloudformation-access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - cloudformation:DescribeStacks
              - cloudformation:CreateChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:DescribeChangeSet
              Resource:
              - Fn::Sub: arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${DeployStackName}/*
        - Ref: AWS::NoValue
      - Fn::If:
        - HasPublishStage
        - PolicyName: publish-lambda-access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - lambda:InvokeFunction
              Resource:
              - Fn::GetAtt:
                - SARPublishApp
                - Outputs.ServerlessRepoPublishFunctionArn
        - Ref: AWS::NoValue
      - Fn::If:
        - HasDeployStage
        - PolicyName: deploy-iam-access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - iam:PassRole
              Resource:
              - Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${DeployRoleName}
        - Ref: AWS::NoValue
      - Fn::If:
        - UseCodeCommit
        - PolicyName: codecommit-access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - codecommit:ListBranches
              - codecommit:GetBranch
              - codecommit:GetCommit
              - codecommit:GetUploadArchiveStatus
              - codecommit:GitPull
              - codecommit:UploadArchive
              - codecommit:CancelUploadArchive
              Resource:
              - Fn::Sub: arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeCommitRepo}
        - Ref: AWS::NoValue
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole:
        Fn::GetAtt:
        - BuildProjectRole
        - Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec:
          Ref: BuildSpecFilePath
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType:
          Ref: ComputeType
        Image: aws/codebuild/standard:2.0
        Type:
          Ref: EnvironmentType
        EnvironmentVariables:
        - Name: PACKAGE_BUCKET
          Value:
            Ref: Artifacts
  GitHubWebhook:
    Type: AWS::CodePipeline::Webhook
    Condition: UseGitHub
    Properties:
      AuthenticationConfiguration:
        SecretToken:
          Ref: GitHubOAuthToken
      Filters:
      - JsonPath: $.ref
        MatchEquals: refs/heads/{Branch}
      Authentication: GITHUB_HMAC
      TargetPipeline:
        Ref: Pipeline
      TargetAction: GitHubSource
      TargetPipelineVersion:
        Fn::GetAtt:
        - Pipeline
        - Version
      RegisterWithThirdParty: true
  IntegrationTestsProject:
    Condition: HasTestStage
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole:
        Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${IntegTestRoleName}
      Source:
        Type: CODEPIPELINE
        BuildSpec:
          Ref: IntegTestBuildSpecFilePath
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType:
          Ref: ComputeType
        Image: aws/codebuild/standard:2.0
        Type:
          Ref: EnvironmentType
        EnvironmentVariables:
        - Name: PACKAGE_BUCKET
          Value:
            Ref: Artifacts
  CodeBuildPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName:
        Fn::Sub: codebuild-access-${AWS::StackName}
      Roles:
      - Ref: BuildProjectRole
      - Fn::If:
        - HasTestStage
        - Ref: IntegTestRoleName
        - Ref: AWS::NoValue
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
        - Action:
          - s3:PutObject
          - s3:GetObject
          - s3:GetObjectVersion
          Effect: Allow
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:s3:::${Artifacts}/*
        - Action:
          - s3:ListBucket
          Effect: Allow
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:s3:::${Artifacts}
  BuildProjectRole:
    Type: AWS::IAM::Role
    Properties:
      Description:
        Fn::Sub: Used in CodeBuild project. Created by CloudFormation ${AWS::StackId}
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /service-role/
  DeployStagePolicy:
    Condition: HasDeployStage
    Type: AWS::IAM::Policy
    Properties:
      PolicyName:
        Fn::Sub: deploy-stage-access-${AWS::StackName}
      Roles:
      - Ref: DeployRoleName
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - s3:GetObject
          Effect: Allow
          Resource:
          - Fn::Sub: arn:${AWS::Partition}:s3:::${Artifacts}/*
  SARPublishApp:
    Condition: HasPublishStage
    Type: AWS::Serverless::Application
    Properties:
      Location:
        ApplicationId: arn:aws:serverlessrepo:us-east-1:077246666028:applications/aws-serverless-codepipeline-serverlessrepo-publish
        SemanticVersion: 1.0.1
  mvpsocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: mvpsocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.message
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: mvpsocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target:
        Fn::Join:
        - /
        - - integrations
          - Ref: DisconnectInteg
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: mvpsocket
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations
  SendRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: mvpsocket
      RouteKey: sendmessage
      AuthorizationType: NONE
      OperationName: SendRoute
      Target:
        Fn::Join:
        - /
        - - integrations
          - Ref: SendInteg
  SendInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: mvpsocket
      Description: Send Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendMessageFunction.Arn}/invocations
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
    - SendRoute
    - DisconnectRoute
    Properties:
      ApiId:
        Ref: mvpsocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      DeploymentId:
        Ref: Deployment
      ApiId:
        Ref: mvpsocket
  mvpchatlog:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Ref: TableName
      AttributeDefinitions:
      - AttributeName: date
        AttributeType: N
      KeySchema:
      - AttributeName: date
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: true
  mvpusers:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Ref: TableNamea
      AttributeDefinitions:
      - AttributeName: date
        AttributeType: N
      KeySchema:
      - AttributeName: date
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: true
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: connectionId
        AttributeType: S
      KeySchema:
      - AttributeName: connectionId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: true
      TableName:
        Ref: TableNameb
  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: OnDisconnectFunction
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TableName
  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
    - mvpsocket
    - OnDisconnectFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: OnDisconnectFunction
      Principal: apigateway.amazonaws.com
  SendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: SendMessageFunction
      Handler: app.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TableName
      - Statement:
        - Effect: Allow
          Action:
          - execute-api:ManageConnections
          Resource:
          - Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${mvpsocket}/*
  SendMessagePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
    - mvpsocket
    - SendMessageFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: SendMessageFunction
      Principal: apigateway.amazonaws.com
  mvpqr:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: mvpqr
  ProductBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: mvpangularsrc
      PolicyDocument:
        Id: PublicReadPolicy
        Version: 2012-10-17
        Statement:
        - Sid: PublicReadForGetBucketObjects
          Effect: Allow
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Sub: arn:aws:s3:::${mvpangularsrc}/*
  ProductBucketPolicy2:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: mvpsamsrc
      PolicyDocument:
        Id: PublicReadPolicy
        Version: 2012-10-17
        Statement:
        - Sid: PublicReadForGetBucketObjects
          Effect: Allow
          Principal: '*'
          Action: s3:GetObject
          Resource:
            Fn::Sub: arn:aws:s3:::${mvpsamsrc}/*
  mvpangular:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: mvpangular
  mvpsamsrc:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: mvpsamsrc
  mvpsamcf:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: mvpsamcf
  mvpangularsrc:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: mvpangularsrc
  myLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: myLogGroup
      RetentionInDays: 180
  myLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName:
        Ref: myLogGroup
      LogStreamName: myLogStream
  createTableLog:
    Type: AWS::Logs::LogGroup
    DependsOn:
    - createTable
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${createTable}
      RetentionInDays: 7
  addToKitchenLogLog:
    Type: AWS::Logs::LogGroup
    DependsOn:
    - addToKitchenLog
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${addToKitchenLog}
      RetentionInDays: 7
  createUserLog:
    Type: AWS::Logs::LogGroup
    DependsOn:
    - createUser
    Properties:
      LogGroupName:
        Fn::Sub: /aws/lambda/${createUser}
      RetentionInDays: 7
  mvpuserpool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: mvpuserpool
  addToCustomerLog:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: addToCustomerLog
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /addtocustomerlogs
            Method: get
      Policies:
      - AmazonDynamoDBFullAccess
      - AmazonS3FullAccess
  addToAdminLog:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: addToAdminLog
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /addtoadminlogs
            Method: get
      Policies:
      - AmazonDynamoDBFullAccess
      - AmazonS3FullAccess
  addToKitchenLog:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: addToKitchenLog
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /addtokitchenlogs
            Method: get
      Policies:
      - AmazonDynamoDBFullAccess
  createUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: createUser
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /createuser
            Method: get
      Policies:
      - AmazonDynamoDBFullAccess
  createTable:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: createTable
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /createtable
            Method: get
      Policies:
      - AmazonDynamoDBFullAccess
  storeQr:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: storeQr
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /storeqr
            Method: get
      Policies:
      - AmazonS3FullAccess
Outputs:
  addToCustomerLogApi:
    Description: API Gateway endpoint URL for Prod stage for addToCustomerLog function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  addToCustomerLog:
    Description: addtoCustomerLog Lambda Function ARN
    Value:
      Fn::GetAtt:
      - addToCustomerLog
      - Arn
  addToCustomerLogIamRole:
    Description: Implicit IAM Role created for addToCustomerLogfunction
    Value:
      Fn::GetAtt:
      - addToCustomerLogRole
      - Arn
  addToAdminLogApi:
    Description: API Gateway endpoint URL for Prod stage for addToAdminLogRole function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  addToAdminLog:
    Description: addToAdminLogRole Lambda Function ARN
    Value:
      Fn::GetAtt:
      - addToAdminLog
      - Arn
  addToAdminLogIamRole:
    Description: Implicit IAM Role created for addToAdminLogRole function
    Value:
      Fn::GetAtt:
      - addToAdminLogRole
      - Arn
  addToKitchenLogApi:
    Description: API Gateway endpoint URL for Prod stage for addToKitchenLog function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  addToKitchenLog:
    Description: addToKitchenLog Lambda Function ARN
    Value:
      Fn::GetAtt:
      - addToKitchenLog
      - Arn
  addToKitchenLogIamRole:
    Description: Implicit IAM Role created for addToKitchenLog function
    Value:
      Fn::GetAtt:
      - addToKitchenLogRole
      - Arn
  createUserApi:
    Description: API Gateway endpoint URL for Prod stage for createUser function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  createUser:
    Description: createUser Lambda Function ARN
    Value:
      Fn::GetAtt:
      - createUser
      - Arn
  createUserIamRole:
    Description: Implicit IAM Role created for createUser function
    Value:
      Fn::GetAtt:
      - createUserRole
      - Arn
  createTableApi:
    Description: API Gateway endpoint URL for Prod stage for createTable function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  createTable:
    Description: createTable Lambda Function ARN
    Value:
      Fn::GetAtt:
      - createTable
      - Arn
  createTableIamRole:
    Description: Implicit IAM Role created for createTab;e function
    Value:
      Fn::GetAtt:
      - createTableRole
      - Arn
  storeQrApi:
    Description: storeQr endpoint URL for Prod stage for storeQrfunction
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
  storeQr:
    Description: storeQr Lambda Function ARN
    Value:
      Fn::GetAtt:
      - storeQr
      - Arn
  storeQrIamRole:
    Description: Implicit IAM Role created for storeQr function
    Value:
      Fn::GetAtt:
      - storeQrRole
      - Arn
